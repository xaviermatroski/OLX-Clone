<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Messages - IIT Ropar Marketplace</title>
    <link rel="stylesheet" href="/css/styles.css">
    <!-- Bootstrap CSS for responsive design -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="#">
            <img src="/images/iitropar_logo.jpg" alt="IIT Ropar Logo" height="50">
            IIT Ropar Marketplace
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/user/<%= user_name %>">
                        <i class="fas fa-home"></i> Home</a>
                </li>
                <!-- <li class="nav-item">
                    <a class="nav-link" href="/cart">
                        <i class="fas fa-shopping-cart"></i> Cart
                    </a>
                </li> -->
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-user"></i> Profile
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="/profile/<%= user_name %>">View Profile</a>
                        <a class="dropdown-item" href="/orders">My Orders</a>
                        <div class="dropdown-divider"></div>
                        <form id="logout-form" action="/logout" method="POST" style="display: none;"></form>
                        <a class="dropdown-item" href="#" onclick="document.getElementById('logout-form').submit();">Logout</a>
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container mt-4 mb-4">
        <div class="row">
            <!-- Chat list -->
            <div class="col-md-4 chat-list">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Conversations</h5>
                    </div>
                    <div class="list-group list-group-flush">
                        <% conversations.forEach(function(conv) { %>
                            <a href="/messages?conversation=<%= conv._id %>" 
                               class="list-group-item list-group-item-action <%= currentConversation && currentConversation._id.toString() === conv._id.toString() ? 'active' : '' %>">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-1"><%= conv.product.name %></h6>
                                        <small>with <%= conv.seller === user_name ? conv.buyer : conv.seller %></small>
                                    </div>
                                    <% if (conv.unreadCount > 0) { %>
                                        <span class="badge badge-primary badge-pill"><%= conv.unreadCount %></span>
                                    <% } %>
                                </div>
                            </a>
                        <% }); %>
                    </div>
                </div>
            </div>

            <!-- Chat messages -->
            <div class="col-md-8">
                <div class="card chat-box">
                    <div class="card-header">
                        <% if (currentConversation) { %>
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5>Conversation with <%= currentConversation ? (currentConversation.seller === user_name ? currentConversation.buyer : currentConversation.seller) : '' %></h5>
                                <% if (currentConversation && currentConversation.seller !== user_name) { %>
                                    <button class="btn btn-warning btn-sm" onclick="openReportModal('<%= currentConversation.seller %>')">
                                        <i class="fas fa-flag"></i> Report User
                                    </button>
                                <% } else if (currentConversation && currentConversation.buyer !== user_name) { %>
                                    <button class="btn btn-warning btn-sm" onclick="openReportModal('<%= currentConversation.buyer %>')">
                                        <i class="fas fa-flag"></i> Report User
                                    </button>
                                <% } %>
                            </div>
                            <h5 class="mb-0">
                                <%= currentConversation.product.name %> - 
                                Chat with <%= currentConversation.seller === user_name ? currentConversation.buyer : currentConversation.seller %>
                            </h5>
                        <% } else { %>
                            <h5 class="mb-0">Select a conversation to start chatting</h5>
                        <% } %>
                    </div>
                    <div class="card-body chat-messages" id="chatMessages">
                        <% if (currentConversation && messages) { %>
                            <% messages.forEach(function(message) { %>
                                <div class="message <%= message.sender === user_name ? 'message-sent' : 'message-received' %>">
                                    <div class="message-content">
                                        <p><%= message.content %></p>
                                        <small class="message-time">
                                            <%= message.createdAt.toLocaleString() %>
                                        </small>
                                    </div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                    <% if (currentConversation) { %>
                        <div class="card-footer">
                            <!-- Add Quick Message Suggestions -->
                            <div class="quick-messages mb-2">
                                <button type="button" class="btn btn-sm btn-outline-secondary mr-2 mb-2" onclick="sendQuickMessage('Is this still available?')">Is this still available?</button>
                                <button type="button" class="btn btn-sm btn-outline-secondary mr-2 mb-2" onclick="sendQuickMessage('What is your best price?')">What is your best price?</button>
                                <button type="button" class="btn btn-sm btn-outline-secondary mr-2 mb-2" onclick="sendQuickMessage('Where can we meet?')">Where can we meet?</button>
                                <button type="button" class="btn btn-sm btn-outline-secondary mr-2 mb-2" onclick="sendQuickMessage('Can you share more pictures?')">Can you share more pictures?</button>
                            </div>
                            <form id="messageForm" class="message-form" autocomplete="off">
                                <div class="input-group">
                                    <input type="text" 
                                           class="form-control" 
                                           id="messageInput" 
                                           placeholder="Type your message..."
                                           autocomplete="off"
                                           autocapitalize="on"
                                           spellcheck="true">
                                    <div class="input-group-append">
                                        <button class="btn custom-btn login-btn" type="submit">
                                            <i class="fas fa-paper-plane"></i>
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <!-- Replace existing Report User Modal with this enhanced version -->
    <div class="modal fade" id="reportModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h5 class="modal-title">
                        <i class="fas fa-flag"></i> Report User
                    </h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="reportForm">
                        <input type="hidden" id="reportedUser" name="reportedUser">
                        
                        <div class="form-group">
                            <label>Select Reason for Report:</label>
                            <div class="custom-control custom-radio mb-2">
                                <input type="radio" id="spam" name="reportReason" class="custom-control-input" value="Spam or misleading behavior">
                                <label class="custom-control-label" for="spam">Spam or misleading behavior</label>
                            </div>
                            <div class="custom-control custom-radio mb-2">
                                <input type="radio" id="harassment" name="reportReason" class="custom-control-input" value="Harassment or inappropriate behavior">
                                <label class="custom-control-label" for="harassment">Harassment or inappropriate behavior</label>
                            </div>
                            <div class="custom-control custom-radio mb-2">
                                <input type="radio" id="fake" name="reportReason" class="custom-control-input" value="Fake profile/impersonation">
                                <label class="custom-control-label" for="fake">Fake profile/impersonation</label>
                            </div>
                            <div class="custom-control custom-radio mb-2">
                                <input type="radio" id="scam" name="reportReason" class="custom-control-input" value="Attempted scam">
                                <label class="custom-control-label" for="scam">Attempted scam</label>
                            </div>
                            <div class="custom-control custom-radio mb-2">
                                <input type="radio" id="other" name="reportReason" class="custom-control-input" value="other">
                                <label class="custom-control-label" for="other">Other reason</label>
                            </div>
                        </div>
                        
                        <div class="form-group" id="otherReasonGroup" style="display: none;">
                            <label for="otherReason">Specify Other Reason:</label>
                            <textarea class="form-control" id="otherReason" rows="3" placeholder="Please provide details..."></textarea>
                        </div>

                        <div class="form-group">
                            <label for="reportDescription">Additional Details (Optional):</label>
                            <textarea class="form-control" id="reportDescription" name="reportDescription" 
                                      rows="3" placeholder="Provide any additional details or context about this report..."></textarea>
                            <small class="form-text text-muted">
                                Please include specific examples or details that will help us investigate this report.
                            </small>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="submitReport()" id="submitReportBtn" disabled>
                        <i class="fas fa-exclamation-triangle"></i> Submit Report
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="footer bg-dark text-white py-3">
        <div class="container text-center">
            <p>&copy; 2025 IIT Ropar Marketplace. All rights reserved.</p>
        </div>
    </footer>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const chatMessages = document.getElementById('chatMessages');
        const messageForm = document.getElementById('messageForm');
        const messageInput = document.getElementById('messageInput');
        const conversationId = '<%= currentConversation ? currentConversation._id : "" %>';

        // Clear unread messages when opening conversation
        if (conversationId) {
            let unreadMessages = JSON.parse(localStorage.getItem('unreadMessages') || '[]');
            unreadMessages = unreadMessages.filter(id => id !== conversationId);
            localStorage.setItem('unreadMessages', JSON.stringify(unreadMessages));
            
            // Remove notification dot if no more unread messages
            if (unreadMessages.length === 0) {
                localStorage.removeItem('unreadMessages');
                window.opener && window.opener.document.querySelector('.notification-dot')?.classList.add('d-none');
            }
        }

        // Scroll to bottom of chat
        function scrollToBottom() {
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        // Initially scroll to bottom
        scrollToBottom();

        if (messageForm) {
            messageForm.addEventListener('submit', (e) => {
                e.preventDefault();
                const message = messageInput.value.trim();
                if (message) {
                    socket.emit('chatMessage', {
                        conversationId,
                        message,
                        sender: '<%= user_name %>'
                    });
                    messageInput.value = '';
                }
            });
        }

        // Listen for messages
        socket.on('message', (message) => {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${message.sender === '<%= user_name %>' ? 'message-sent' : 'message-received'}`;
            messageDiv.innerHTML = `
                <div class="message-content">
                    <p>${message.content}</p>
                    <small class="message-time">${new Date().toLocaleString()}</small>
                </div>
            `;
            chatMessages.appendChild(messageDiv);
            scrollToBottom();
        });

        // Add Quick Message Function
        function sendQuickMessage(text) {
            if (conversationId) {
                socket.emit('chatMessage', {
                    conversationId,
                    message: text,
                    sender: '<%= user_name %>'
                });
            }
        }

        function openReportModal(username) {
            document.getElementById('reportedUser').value = username;
            $('#reportModal').modal('show');
        }

        // Add these new functions for report handling
        document.querySelectorAll('input[name="reportReason"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const submitBtn = document.getElementById('submitReportBtn');
                const otherReasonGroup = document.getElementById('otherReasonGroup');
                
                submitBtn.disabled = false;
                
                if (this.value === 'other') {
                    otherReasonGroup.style.display = 'block';
                    submitBtn.disabled = !document.getElementById('otherReason').value.trim();
                } else {
                    otherReasonGroup.style.display = 'none';
                }
            });
        });

        document.getElementById('otherReason').addEventListener('input', function() {
            const submitBtn = document.getElementById('submitReportBtn');
            submitBtn.disabled = !this.value.trim();
        });

        function submitReport() {
            const reportedUser = document.getElementById('reportedUser').value;
            const selectedReason = document.querySelector('input[name="reportReason"]:checked');
            const description = document.getElementById('reportDescription').value.trim();
            
            if (!selectedReason) {
                alert('Please select a reason for reporting');
                return;
            }

            let reason = selectedReason.value;
            if (reason === 'other') {
                const otherReason = document.getElementById('otherReason').value.trim();
                if (!otherReason) {
                    alert('Please specify the other reason');
                    return;
                }
                reason = otherReason;
            }

            const fullReason = description ? `${reason}\n\nAdditional Details: ${description}` : reason;

            // Show loading state
            const submitBtn = document.getElementById('submitReportBtn');
            const originalContent = submitBtn.innerHTML;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Submitting...';
            submitBtn.disabled = true;

            fetch('/report-user', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    reportedUser,
                    reason: fullReason,
                    conversationId: '<%= currentConversation ? currentConversation._id : "" %>'
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message) {
                    // Show success message
                    alert('Report submitted successfully');
                    $('#reportModal').modal('hide');
                    document.getElementById('reportForm').reset();
                } else {
                    throw new Error(data.error || 'Error submitting report');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error submitting report. Please try again.');
            })
            .finally(() => {
                // Restore button state
                submitBtn.innerHTML = originalContent;
                submitBtn.disabled = false;
            });
        }
    </script>
</body>
</html>
